{"version":3,"sources":["../../dist/index.es.js","App.js","serviceWorker.js","index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","index_es_useMultiState","_len2","arguments","intialStates","_key2","map","react","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","classname","_len","args","_key","filter","arg","join","index_es_StyledInput","_ref","name","id","label","_onChange","onChange","isValid","isRequired","errorMessage","requiredMessage","inputStyle","wrapperStyle","_useMultiState2","color","errorColor","accentColor","_useMultiState2$","focused","setFocused","_useMultiState2$2","error","setError","fieldProps","onFocus","onBlur","trim","_error","Error","event","target","react_default","a","className","htmlFor","message","propTypes","prop_types_default","string","any","func","bool","object","defaultProps","useForm","state","callback","values","some","setValues","hasErrors","setHasErrors","_useMultiState2$3","isComplete","setIsComplete","handleChange","_ref2","newValues","source","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","forEach","_objectSpread","vals","_ref3","_ref4","handleSubmit","preventDefault","index_es","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","success","setSuccess","_useForm","console","log","canSubmit","entries","onSubmit","disabled","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30f7f0fb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar useMultiState = function useMultiState() {\n  for (var _len2 = arguments.length, intialStates = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    intialStates[_key2] = arguments[_key2];\n  }\n\n  return intialStates.map(useState);\n};\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".styled-input-wrapper {\\n  position: relative;\\n  color: #999; }\\n\\n.styled-input-error {\\n  color: red; }\\n\\n.styled-input-error-message {\\n  height: 1rem;\\n  text-align: left;\\n  padding-left: 1rem;\\n  font-size: 0.65rem;\\n  white-space: nowrap; }\\n\\n.styled-input {\\n  position: relative;\\n  width: 100%;\\n  margin-top: 1rem;\\n  border-radius: 3px;\\n  -webkit-box-shadow: 0 0 12px rgba(192, 192, 192, 0.6);\\n  box-shadow: 0 0 12px rgba(192, 192, 192, 0.6); }\\n\\n.styled-input-label {\\n  position: absolute;\\n  top: 1rem;\\n  left: 1rem;\\n  z-index: 1;\\n  -webkit-transition: all 0.25s ease;\\n  transition: all 0.25s ease;\\n  pointer-events: none; }\\n\\n.styled-input-with-value {\\n  font-size: 0.65rem;\\n  top: -1rem;\\n  -webkit-transition: all 0.125s ease;\\n  transition: all 0.125s ease;\\n  pointer-events: all; }\\n\\n.styled-input-focused {\\n  color: darkslateblue; }\\n\\n.styled-input input,\\n.styled-input textarea {\\n  width: 100%;\\n  display: block;\\n  padding: 1rem;\\n  border: 0;\\n  font-size: 1rem; }\\n\\n.styled-input input:focus,\\n.styled-input textarea:focus {\\n  outline: 0; }\\n\\n.styled-input textarea {\\n  font-family: inherit;\\n  resize: none;\\n  overflow: auto;\\n  min-height: 4rem;\\n  height: 8rem; }\\n\\n.styled-input-line {\\n  background: darkslateblue;\\n  display: block;\\n  width: 0;\\n  height: 3px;\\n  border-radius: 0 0 3px 3px;\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  -webkit-transition: all 0.125s ease;\\n  transition: all 0.125s ease; }\\n\\n.styled-input-line.styled-input-focused {\\n  width: 100%;\\n  -webkit-transition: all 0.075s ease;\\n  transition: all 0.075s ease; }\\n\\n.styled-input-line.styled-input-error {\\n  background: red; }\\n\";\nstyleInject(css);\n\nvar classname = function classname() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.filter(function (arg) {\n    return arg;\n  }).join(' ');\n};\n\nvar StyledInput = function StyledInput(_ref) {\n  var name = _ref.name,\n      id = _ref.id,\n      type = _ref.type,\n      value = _ref.value,\n      label = _ref.label,\n      _onChange = _ref.onChange,\n      isValid = _ref.isValid,\n      isRequired = _ref.isRequired,\n      errorMessage = _ref.errorMessage,\n      requiredMessage = _ref.requiredMessage,\n      wrapperStyle = _ref.wrapperStyle,\n      inputStyle = _ref.inputStyle,\n      color = _ref.color,\n      errorColor = _ref.errorColor,\n      accentColor = _ref.accentColor;\n\n  var _useMultiState = useMultiState(false, null),\n      _useMultiState2 = _slicedToArray(_useMultiState, 2),\n      _useMultiState2$ = _slicedToArray(_useMultiState2[0], 2),\n      focused = _useMultiState2$[0],\n      setFocused = _useMultiState2$[1],\n      _useMultiState2$2 = _slicedToArray(_useMultiState2[1], 2),\n      error = _useMultiState2$2[0],\n      setError = _useMultiState2$2[1];\n\n  var fieldProps = {\n    name: name,\n    id: id,\n    type: type,\n    value: value,\n    style: inputStyle,\n    onFocus: function onFocus() {\n      return setFocused(true);\n    },\n    onBlur: function onBlur() {\n      setFocused(false);\n\n      if (isRequired && (!value || !value.trim())) {\n        var _error = new Error(requiredMessage);\n\n        setError(_error);\n        _onChange && _onChange({\n          name: name,\n          value: value,\n          error: _error\n        });\n      }\n    },\n    onChange: function onChange(event) {\n      var value = event.target.value;\n      var error = isRequired && (!value || !value.trim()) ? requiredMessage : isValid && !isValid(value) ? errorMessage : null;\n      error = error ? new Error(error) : error;\n      _onChange && _onChange({\n        name: name,\n        value: value,\n        error: error\n      });\n      setError(error);\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"styled-input-wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"styled-input\"\n  }, type === 'textarea' ? React.createElement(\"textarea\", fieldProps) : React.createElement(\"input\", fieldProps), React.createElement(\"span\", {\n    className: classname('styled-input-line', error ? 'styled-input-error' : null, focused ? 'styled-input-focused' : null)\n  }), React.createElement(\"label\", {\n    htmlFor: id,\n    className: classname('styled-input-label', value ? 'styled-input-with-value' : null, error ? 'styled-input-error' : focused ? 'styled-input-focused' : null)\n  }, label)), React.createElement(\"div\", {\n    className: \"styled-input-error styled-input-error-message\"\n  }, error && error.message));\n};\n\nStyledInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  isValid: PropTypes.func,\n  isRequired: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  requiredMessage: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n  inputStyle: PropTypes.object,\n  color: PropTypes.string,\n  errorColor: PropTypes.string,\n  accentColor: PropTypes.string\n};\nStyledInput.defaultProps = {\n  isRequired: false,\n  errorMessage: 'error',\n  requiredMessage: 'This is a required field'\n};\n\nvar useForm = function useForm() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _useMultiState = useMultiState(state, true, !Object.values(state).some(function (_ref) {\n    var isRequired = _ref.isRequired;\n    return isRequired;\n  })),\n      _useMultiState2 = _slicedToArray(_useMultiState, 3),\n      _useMultiState2$ = _slicedToArray(_useMultiState2[0], 2),\n      values = _useMultiState2$[0],\n      setValues = _useMultiState2$[1],\n      _useMultiState2$2 = _slicedToArray(_useMultiState2[1], 2),\n      hasErrors = _useMultiState2$2[0],\n      setHasErrors = _useMultiState2$2[1],\n      _useMultiState2$3 = _slicedToArray(_useMultiState2[2], 2),\n      isComplete = _useMultiState2$3[0],\n      setIsComplete = _useMultiState2$3[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    event && event.preventDefault();\n    callback();\n  };\n\n  var handleChange = function handleChange(_ref2) {\n    var name = _ref2.name,\n        value = _ref2.value,\n        error = _ref2.error;\n\n    var newValues = _objectSpread({}, values, _defineProperty({}, name, {\n      value: value,\n      error: error\n    }));\n\n    setValues(newValues);\n    var vals = Object.values(newValues);\n    setHasErrors(vals.some(function (_ref3) {\n      var error = _ref3.error;\n      return error;\n    }));\n    setIsComplete(!vals.some(function (_ref4) {\n      var value = _ref4.value,\n          isRequired = _ref4.isRequired;\n      return !value.trim() && isRequired;\n    }));\n  };\n\n  return {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    values: values,\n    hasErrors: hasErrors,\n    isComplete: isComplete\n  };\n};\n\nexport default StyledInput;\nexport { useForm };","import React, { useState } from 'react'\nimport StyledInput, { useForm } from 'styled-input'\n\nimport './App.css'\n\nconst App = () => {\n  const [error, setError] = useState(null)\n  const [success, setSuccess] = useState(false)\n\n  const {\n    values,\n    hasErrors,\n    isComplete,\n    handleChange,\n    handleSubmit\n  } = useForm({\n    name: {\n      value: '',\n      isRequired: true\n    },\n    message: {\n      value: '',\n      isRequired: true\n    }\n  }, () => {\n    console.log('called')\n    \n    if (canSubmit) {\n      setSuccess(true)\n    } else {\n      setError(new Error('There is a problem, please check the fields'))\n    }\n  })\n\n  const canSubmit = !hasErrors && isComplete\n  console.log('canSubmit', canSubmit)\n  console.log('values', values)\n  console.log('hasErrors', hasErrors)\n  console.log('isComplete', isComplete)\n\n  return (\n    <div className=\"page\">\n      <header>\n        <h1>Example of Styled Input</h1>\n      </header>\n      <div className=\"my-cool-form\">\n        {success ? (\n          <div className=\"success-message\">\n            Here's what you submitted:\n            <ul>\n              {Object.entries(values).map(([key, { value }], i) => (\n                <li key={i}>\n                  <div>{key}</div>\n                  <div>{value}</div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit} disabled={!canSubmit}>\n          <h2>My Cool Form</h2>\n            <StyledInput\n              name=\"name\"\n              id=\"name\"\n              label=\"Your Name\"\n              type=\"text\"\n              value={values.name.value}\n              isRequired\n              onChange={handleChange}\n            />\n            <StyledInput\n              name=\"message\"\n              id=\"message\"\n              label=\"Your Message\"\n              type=\"textarea\"\n              value={values.message.value}\n              isRequired\n              onChange={handleChange}\n            />\n            <div className=\"error-message\">{error && error.message}</div>\n            <div className=\"submit-wrapper\">\n              <button type=\"submit\" className={!canSubmit ? 'disabled' : ''}>\n                Submit\n              </button>\n            </div>\n          </form>\n        )}\n      </div>\n      <footer>\n        <div className=\"flex\">\n          <div>&copy; <a href=\"https://www.github.com/alex-taxiera\">Alex Taxiera</a></div>\n          <div><a href=\"https://www.github.com/alex-taxiera/styled-input\">{'<Code />'}</a></div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}